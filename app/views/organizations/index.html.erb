<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <style type="text/css">
        html { height: 100% }
        body { height: 100%; width: 100%; margin: 0px; padding: 0px;}
        #map_canvas { width: 100%; height:100%;};
    </style>
    <link rel="stylesheet" type="text/css" href="/stylesheets/IndexStyle.css" />
    <link rel="stylesheet" type="text/css" href="/stylesheets/datePicker.css"/>

    <script type="text/javascript"src="http://maps.google.com/maps/api/js?sensor=false"></script>
    <script type="text/javascript"src="https://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js"></script>
    <script src="http://tab-slide-out.googlecode.com/files/jquery.tabSlideOut.v1.3.js"></script>
    <script type="text/javascript" src="/javascripts/datepicker.min.js"></script>
    <script type="text/javascript">
/*        var statuses=["In Transit","Arrived"];
        var orgs=["Red Cross","RHOK"];
        var projs=["Hurricane","Earthquake"];
        function pkg(orgID,projID,stat,location,pkgID,sendDate,recDate){
            this.orgID=orgID;
            this.projID=projID;
            this.stat=stat;
            this.location=location;
            this.pkgID=pkgID;
            this.sendDate=new Date(sendDate);
            this.recDate=new Date(recDate);
        }
        var pkg1 = new pkg(0,0,0,new google.maps.LatLng(10,0),"rake","5/11/2011","5/11/2011");
        var pkg2 = new pkg(1,1,1,new google.maps.LatLng(24,5),"gem","2/11/2011","7/11/2011");
        var pkg3 = new pkg(1,1,1,new google.maps.LatLng(-30,5),"rails","3/11/2011","4/11/2011");
        var pkg4 = new pkg(0,1,1,new google.maps.LatLng(24,10),"ruby","1/11/2011","6/1/2011");
        var pkg5 = new pkg(1,0,1,new google.maps.LatLng(44,5),"unicorn","4/11/2011","6/1/2011");

        var pkgs = new Array();
        pkgs.push(pkg1);pkgs.push(pkg2);pkgs.push(pkg3);pkgs.push(pkg4);pkgs.push(pkg5);
  */
        var icons = new Array("/images/green.png","/images/yellow.png","/images/orange.png");
        function pkg(orgID,projID,stat,location,pkgID,sendDate,recDate){
            this.orgID=orgID;
            this.projID=projID;
            this.stat=stat;
            this.location=new google.maps.LatLng(location[0],location[1]);
            this.pkgID=pkgID;
            this.sendDate=new Date(sendDate);
            this.recDate=new Date(recDate);
        }

var statuses = <%= (Package::STATUSES.keys).to_json.html_safe %>;
    var orgs = <%= (Organization.all.map {|o| {o.id => o.name}}).reduce {|a,b| a.merge(b)}.to_json.html_safe %>;
    var projs = <%= (Project.all.map {|p| {p.id => p.name}}).reduce {|a,b| a.merge(b)}.to_json.html_safe %>;
    // packages: [0=>{orgID,projID,stat,location,pkgID,sendDate,recDate}, 1=>{orgID,projID,stat,location,pkgID,sendDate,recDate}]
    var pkgz = <%= (Package.all.map {|p| {p.id => {"orgID" => p.project.organization_id, "projID" => p.project_id, "stat" => true ? rand(Package::STATUSES.keys.length) : p.last_status.status, "location" => [p.source_lat,p.source_lng], "pkgID" => p.identifier, "sendDate" => p.sent_date.to_s, "recDate" => p.exp_delivery_date.to_s}}}).reduce {|a,b| a.merge(b)}.to_json.html_safe %>;
var pkgs=new Array();
$.each(pkgz,function(index,pckg){
	pkgs.push((new pkg(pckg.orgID,pckg.projID,pckg.stat,pckg.location,pckg.pkgID,pckg.sendDate,pckg.recDate)));
});
        var map;
        var filters=[{dispName:"Status",id:"statusFilter",array:statuses,filterObj:"stat"},
             {dispName:"Organization",id:"orgFilter",array:orgs,filterObj:"orgID"},
             {dispName:"Project",id:"projFilter",array:projs,filterObj:"projID"}];
        var markers= new Array();


        function Marker (marker, infoWindow,pkg){
            this.marker=marker;
            this.infoWindow=infoWindow;
            this.setVisible= function(bool){
                infoWindow.close();
                marker.setVisible(bool);
            }
            this.pkg=pkg;
        }

        $(document).ready(function() {
            var mLatlng = new google.maps.LatLng(10,0);
            var myOptions = {
                zoom: 2,
                center: mLatlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            }
            map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
            displayPackages();
            createSelectFilters();
            createFilters();
            createFilterTab();
            $(".datePicker").datepicker({
                onClose:function(dateText, inst){
                    console.log($(".slide-out-div"));
                    setTimeout('moveSlider()',350);
                    console.log($(".slide-out-div"));
                }
            });
            $(".datePicker").change(function(){
                console.log("filtering");
                filterResults();
            });
        });

        function moveSlider(){
            $(".slide-out-div").css("right","-3px");$(".slide-out-div").addClass("open");
        }
        function createSelectFilters(){
            $.each(filters,function(ind,filter){
                $('.slide-out-div table').append("<tr><td>"+filter.dispName+":</td><td><select class='filterOption' id='"+filter.id+"'>");
                $('.slide-out-div table #'+filter.id).append("<option value='-1'>--</option>");
                $.each(filter.array,function(index, value){
                    $('.slide-out-div table #'+filter.id).append("<option value='"+index+"'>"+value+"</option>");
                });
                $('.slide-out-div table').append("</select></td><tr>");
                $("#"+filter.id).data("filterObj",filter.filterObj);

                $("#"+filter.id).change(function(event){
                     filterResults();
                });
            });
           $('.slide-out-div').append("<div><span id='allFilter'>Show All</span></div>");
        }

        function filterResults(){
            showAll();
            selectFilters();
            handleSendDateSearch();
            handleRecDateSearch();
            return false;
        }

        function selectFilters(){
            $(".filterOption").each(function(index, element){
                $.each(markers,function(index, marker){
                    if($(element).children("option:selected").val()==-1){
                        console.log("ignore");
                    }else if($(element).children("option:selected").val()!=marker.pkg[$(element).data("filterObj")]){
                        marker.setVisible(false);
                        console.log("hide val" +$(element).children("option:selected").val()+" stat: "+marker.pkg[$(element).data("filterObj")]);
                    }else{
                        console.log("show val" +$(element).children("option:selected").val()+" stat: "+marker.pkg[$(element).data("filterObj")]);
                    }
                });
            });
        }

        function showAll(){
            $.each(markers,function(index, marker){
                marker.setVisible(true);
            });
        }
        function createFilters(){
             $('#allFilter').click(function(event){
                showAll();
             });
        }

        function createFilterTab(){
            $('.slide-out-div').tabSlideOut({
                tabHandle: '.handle',                              //class of the element that will be your tab
                pathToTabImage: '/images/contact_tab.gif',          //path to the image for the tab *required*
                imageHeight: '122px',                               //height of tab image *required*
                imageWidth: '40px',                               //width of tab image *required*
                tabLocation: 'right',                               //side of screen where tab lives, top, right, bottom, or left
                speed: 300,                                        //speed of animation
                action: 'click',                                   //options: 'click' or 'hover', action to trigger animation
                topPos: '200px',                                   //position from the top
                fixedPosition: true                               //options: true makes it stick(fixed position) on scroll
            });
        }
        function displayPackages(){
            //for(var i =0; i<pkgs.length;i++){
		$.each(pkgs,function(index,curPkg){
               // var curPkg=pkgs[i];
		console.log(curPkg);
                var marker = new google.maps.Marker({
                    position: curPkg.location,
                    map: map,
                    icon: getIcon(curPkg),
                    visible: true,
                });
                var infoWindow = new google.maps.InfoWindow({
                    content: getContent(curPkg)
                });
                addWindow(marker, infoWindow);
                markers.push(new Marker(marker, infoWindow,curPkg));
            });
        }

        function addWindow(mark, iW){
            google.maps.event.addListener(mark, 'click', function(event) {
                    //open the window corresponding to the marker that was just clicked
                    iW.open(map,mark);
                });
        }

        function getIcon(pkg){
            return icons[pkg.stat];
        }

        function getContent(pkg){
            return "package id: "+ pkg.pkgID+"<br> Org Name: "+orgs[pkg.orgID]+"Status<br> "+statuses[pkg.stat]+"<br> "+projs[pkg.projID]+ "<br>sent: "+pkg.sendDate+"<br> received: "+pkg.recDate;l
        }

        function handleSearch(){
            showAll();
            $.each(markers,function(index, marker){
                if(marker.pkg.pkgID.toLowerCase()!=$("#searchTerm").val().toLowerCase()){
                    marker.setVisible(false);
                }
            });
            selectFilters();
            return false;
        }


        function handleSendDateSearch(){
            if($("#sendDate2").val()=="" || $("#sendDate1").val()=="")
                return;
            var lastDate=new Date($("#sendDate2").val());
            var firstDate= new Date($("#sendDate1").val());

             $.each(markers,function(index, marker){
                console.log(marker.pkg.sendDate);
                if(marker.pkg.sendDate>lastDate || marker.pkg.sendDate<firstDate) {
                    marker.setVisible(false);
                }
            });
        }

        function handleRecDateSearch(){
            if($("#recDate2").val()=="" || $("#recDate1").val()=="")
                return;
            var lastDate=new Date($("#recDate2").val());
            var firstDate= new Date($("#recDate1").val());
             $.each(markers,function(index, marker){
                console.log(marker.pkg.sendDate);
                if(marker.pkg.recDate>lastDate || marker.pkg.recDate<firstDate) {
                    marker.setVisible(false);
                }
            });
        }
  </script>
  </head>
  <body>
    <div id="map_canvas"></div>
    <div class="slide-out-div">
        <a class="handle">Filter</a>
        <h3>Filter by</h3>
        <table>
           <form id="sendDateSearch" action="" onsubmit="return filterResults()">
                <tr>
                    <td>Sent Between:</td>
                    <td>
                        <input id="sendDate1" class="datePicker" type='text' name='sendDate1' size="10"/> and
                        <input id="sendDate2" class="datePicker" type='text' name='sendDate2' size="10"/>
                    </td>
                </tr>
                <tr>
                    <td>Received Between:</td>
                    <td>
                        <input id="recDate1" class="datePicker" type='text' name='recDate1' size="10"/> and
                        <input id="recDate2" class="datePicker" type='text' name='recDate2' size="10"/>
                    </td>
                </tr>
            </form>
        </table>
        <h3>OR search by package ID</h3>
        <form id="search" action="" onsubmit="return handleSearch()">
            <input id="searchTerm" type='text' name='q' size="10"/>
            <input type="submit" value="Search"/>
        </form>
    </div>
  </body>
</html>

<!--comment-->
